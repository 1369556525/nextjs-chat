# You must first activate a Billing Account here: https://platform.openai.com/account/billing/overview
# Then get your OpenAI API Key here: https://platform.openai.com/account/api-keys
OPENAI_API_KEY="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"

# Generate a random secret: https://generate-secret.vercel.app/32 or `openssl rand -base64 32`
AUTH_SECRET="f84af0ee69ce4b6329e5e50f59d074f8"
# Create a GitHub OAuth app here: https://github.com/settings/applications/new
# Authorization callback URL: https://authjs.dev/reference/core/providers_github#callback-url
AUTH_GITHUB_ID="ede57a622cf74a9e95a1"
AUTH_GITHUB_SECRET="568c4e77e7ef006f64e2d207aa3afc777fe8cb8b"
# Support OAuth login on preview deployments, see: https://authjs.dev/guides/basics/deployment#securing-a-preview-deployment
# Set the following only when deployed. In this example, we can reuse the same OAuth app, but if you are storing users, we recommend using a different OAuth app for development/production so that you don't mix your test and production user base.
# AUTH_REDIRECT_PROXY_URL=https://YOURAPP.vercel.app/api/auth

# Instructions to create kv database here: https://vercel.com/docs/storage/vercel-kv/quickstart and 
KV_URL=“redis://default:280c82912df840d38512de8b348075ee@accepted-gull-41578.kv.vercel-storage.com:41578”
KV_REST_API_URL="https://accepted-gull-41578.kv.vercel-storage.com"
KV_REST_API_TOKEN="AaJqASQgMjI1M2RhYTMtYmE0Ny00NDIwLWE1NWItMjIyMzc0OWYzNzU4MjgwYzgyOTEyZGY4NDBkMzg1MTJkZThiMzQ4MDc1ZWU="
KV_REST_API_READ_ONLY_TOKEN="AqJqASQgMjI1M2RhYTMtYmE0Ny00NDIwLWE1NWItMjIyMzc0OWYzNzU4C3tp2JNbPRSgyYU-9gTle8yOkyGCK8pvATUs54ifIK0="

